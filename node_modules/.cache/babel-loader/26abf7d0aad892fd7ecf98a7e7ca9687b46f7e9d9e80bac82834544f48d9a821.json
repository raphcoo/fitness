{"ast":null,"code":"var _jsxFileName = \"/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\n\n// Type des exercices\n\n// Type des exercices par type de corps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Exemple de données\nconst workouts = {\n  ectomorph: [{\n    name: 'Push Ups',\n    description: 'Do 3 sets of 15 push-ups.'\n  }, {\n    name: 'Pull Ups',\n    description: 'Do 3 sets of 10 pull-ups.'\n  }],\n  mesomorph: [{\n    name: 'Squats',\n    description: 'Do 3 sets of 20 squats.'\n  }, {\n    name: 'Lunges',\n    description: 'Do 3 sets of 12 lunges on each leg.'\n  }],\n  endomorph: [{\n    name: 'Plank',\n    description: 'Hold the plank for 1 minute.'\n  }, {\n    name: 'Jumping Jacks',\n    description: 'Do 3 sets of 30 jumping jacks.'\n  }]\n};\nconst Workout = () => {\n  _s();\n  const [bodyType, setBodyType] = useState('');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Select your Body Type to Get a Workout Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      variant: \"outlined\",\n      sx: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Body Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: bodyType,\n        onChange: e => setBodyType(e.target.value),\n        label: \"Body Type\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"ectomorph\",\n          children: \"Ectomorph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"mesomorph\",\n          children: \"Mesomorph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"endomorph\",\n          children: \"Endomorph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), bodyType && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: [\"Workout Plan for \", bodyType.charAt(0).toUpperCase() + bodyType.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: workouts[bodyType].map((exercise, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: exercise.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: exercise.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Workout, \"dTczhb7WtOXcyy1tNDdDvAqfw18=\");\n_c = Workout;\nexport default Workout;\nvar _c;\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"names":["React","useState","Container","Typography","Grid","Card","CardContent","FormControl","InputLabel","Select","MenuItem","jsxDEV","_jsxDEV","workouts","ectomorph","name","description","mesomorph","endomorph","Workout","_s","bodyType","setBodyType","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","sx","marginBottom","value","onChange","e","target","label","charAt","toUpperCase","slice","container","spacing","map","exercise","index","item","xs","sm","_c","$RefreshReg$"],"sources":["/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\n\n// Type des exercices\ntype Exercise = {\n  name: string;\n  description: string;\n};\n\n// Type des exercices par type de corps\ntype WorkoutPlan = {\n  ectomorph: Exercise[];\n  mesomorph: Exercise[];\n  endomorph: Exercise[];\n};\n\n// Exemple de données\nconst workouts: WorkoutPlan = {\n  ectomorph: [\n    { name: 'Push Ups', description: 'Do 3 sets of 15 push-ups.' },\n    { name: 'Pull Ups', description: 'Do 3 sets of 10 pull-ups.' },\n  ],\n  mesomorph: [\n    { name: 'Squats', description: 'Do 3 sets of 20 squats.' },\n    { name: 'Lunges', description: 'Do 3 sets of 12 lunges on each leg.' },\n  ],\n  endomorph: [\n    { name: 'Plank', description: 'Hold the plank for 1 minute.' },\n    { name: 'Jumping Jacks', description: 'Do 3 sets of 30 jumping jacks.' },\n  ],\n};\n\nconst Workout: React.FC = () => {\n  const [bodyType, setBodyType] = useState<'ectomorph' | 'mesomorph' | 'endomorph' | ''>('');\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Select your Body Type to Get a Workout Plan\n      </Typography>\n\n      <FormControl fullWidth variant=\"outlined\" sx={{ marginBottom: '20px' }}>\n        <InputLabel>Body Type</InputLabel>\n        <Select\n          value={bodyType}\n          onChange={(e) => setBodyType(e.target.value as 'ectomorph' | 'mesomorph' | 'endomorph')}\n          label=\"Body Type\"\n        >\n          <MenuItem value=\"ectomorph\">Ectomorph</MenuItem>\n          <MenuItem value=\"mesomorph\">Mesomorph</MenuItem>\n          <MenuItem value=\"endomorph\">Endomorph</MenuItem>\n        </Select>\n      </FormControl>\n\n      {bodyType && (\n        <div>\n          <Typography variant=\"h5\" gutterBottom>\n            Workout Plan for {bodyType.charAt(0).toUpperCase() + bodyType.slice(1)}\n          </Typography>\n\n          <Grid container spacing={3}>\n            {workouts[bodyType].map((exercise: Exercise, index: number) => (\n              <Grid item xs={12} sm={6} key={index}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\">{exercise.name}</Typography>\n                    <Typography>{exercise.description}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default Workout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}