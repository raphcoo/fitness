{"ast":null,"code":"var _jsxFileName = \"/Users/mathildeanaton/fitness-tracker/src/components/Exercises.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercisesData = {\n  male: {\n    ectomorph: ['Exercice 1', 'Exercice 2', 'Exercice 3'],\n    mesomorph: ['Exercice 4', 'Exercice 5', 'Exercice 6'],\n    endomorph: ['Exercice 7', 'Exercice 8', 'Exercice 9']\n  },\n  female: {\n    ectomorph: ['Exercice 10', 'Exercice 11', 'Exercice 12'],\n    mesomorph: ['Exercice 13', 'Exercice 14', 'Exercice 15'],\n    endomorph: ['Exercice 16', 'Exercice 17', 'Exercice 18']\n  }\n};\nconst Exercises = () => {\n  _s();\n  const {\n    gender,\n    bodyType\n  } = useParams();\n  console.log(`Gender: ${gender}, Body Type: ${bodyType}`);\n  if (!gender || !bodyType) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Invalid selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  const exercises = exercisesData[gender][bodyType];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [\"Exercises for \", bodyType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"LMcKh/tu4m4+G1pL4mdGl/PYOVo=\", false, function () {\n  return [useParams];\n});\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useParams","Container","Typography","jsxDEV","_jsxDEV","exercisesData","male","ectomorph","mesomorph","endomorph","female","Exercises","_s","gender","bodyType","console","log","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","exercises","gutterBottom","map","exercise","index","_c","$RefreshReg$"],"sources":["/Users/mathildeanaton/fitness-tracker/src/components/Exercises.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography } from '@mui/material';\n\ninterface ExercisesData {\n  [key: string]: {\n    [key: string]: string[];\n  };\n}\n\nconst exercisesData: ExercisesData = {\n  male: {\n    ectomorph: ['Exercice 1', 'Exercice 2', 'Exercice 3'],\n    mesomorph: ['Exercice 4', 'Exercice 5', 'Exercice 6'],\n    endomorph: ['Exercice 7', 'Exercice 8', 'Exercice 9'],\n  },\n  female: {\n    ectomorph: ['Exercice 10', 'Exercice 11', 'Exercice 12'],\n    mesomorph: ['Exercice 13', 'Exercice 14', 'Exercice 15'],\n    endomorph: ['Exercice 16', 'Exercice 17', 'Exercice 18'],\n  },\n};\n\nconst Exercises: React.FC = () => {\n  const { gender, bodyType } = useParams<{ gender: string; bodyType: string }>();\n\n  console.log(`Gender: ${gender}, Body Type: ${bodyType}`);\n\n  if (!gender || !bodyType) {\n    return <Typography variant=\"h6\">Invalid selection</Typography>;\n  }\n\n  const exercises = exercisesData[gender][bodyType];\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Exercises for {bodyType}\n      </Typography>\n      <ul>\n        {exercises.map((exercise, index) => (\n          <li key={index}>{exercise}</li>\n        ))}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Exercises;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtD,MAAMC,aAA4B,GAAG;EACnCC,IAAI,EAAE;IACJC,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;IACrDC,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;IACrDC,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY;EACtD,CAAC;EACDC,MAAM,EAAE;IACNH,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;IACxDC,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;IACxDC,SAAS,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa;EACzD;AACF,CAAC;AAED,MAAME,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGd,SAAS,CAAuC,CAAC;EAE9Ee,OAAO,CAACC,GAAG,CAAC,WAAWH,MAAM,gBAAgBC,QAAQ,EAAE,CAAC;EAExD,IAAI,CAACD,MAAM,IAAI,CAACC,QAAQ,EAAE;IACxB,oBAAOV,OAAA,CAACF,UAAU;MAACe,OAAO,EAAC,IAAI;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAChE;EAEA,MAAMC,SAAS,GAAGlB,aAAa,CAACQ,MAAM,CAAC,CAACC,QAAQ,CAAC;EAEjD,oBACEV,OAAA,CAACH,SAAS;IAAAiB,QAAA,gBACRd,OAAA,CAACF,UAAU;MAACe,OAAO,EAAC,IAAI;MAACO,YAAY;MAAAN,QAAA,GAAC,gBACtB,EAACJ,QAAQ;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACblB,OAAA;MAAAc,QAAA,EACGK,SAAS,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BvB,OAAA;QAAAc,QAAA,EAAiBQ;MAAQ,GAAhBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhB,CAAC;AAACV,EAAA,CAvBID,SAAmB;EAAA,QACMX,SAAS;AAAA;AAAA4B,EAAA,GADlCjB,SAAmB;AAyBzB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}