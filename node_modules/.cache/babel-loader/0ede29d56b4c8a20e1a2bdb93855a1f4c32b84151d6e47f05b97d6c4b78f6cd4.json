{"ast":null,"code":"var _jsxFileName = \"/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx\";\nimport React from 'react';\nimport { Container, Typography, Grid, Card, CardContent } from '@mui/material';\n\n// Type des exercices\n\n// Type des exercices par type de corps\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Exemple de données\nconst workouts = {\n  ectomorph: [{\n    name: 'Push Ups',\n    description: 'Do 3 sets of 15 push-ups.'\n  }, {\n    name: 'Pull Ups',\n    description: 'Do 3 sets of 10 pull-ups.'\n  }],\n  mesomorph: [{\n    name: 'Squats',\n    description: 'Do 3 sets of 20 squats.'\n  }, {\n    name: 'Lunges',\n    description: 'Do 3 sets of 12 lunges on each leg.'\n  }],\n  endomorph: [{\n    name: 'Plank',\n    description: 'Hold the plank for 1 minute.'\n  }, {\n    name: 'Jumping Jacks',\n    description: 'Do 3 sets of 30 jumping jacks.'\n  }]\n};\nconst Workout = ({\n  bodyType\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [\"Workout Plan for \", bodyType.charAt(0).toUpperCase() + bodyType.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: workouts[bodyType].map((exercise, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: exercise.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Workout;\nexport default Workout;\nvar _c;\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"names":["React","Container","Typography","Grid","Card","CardContent","jsxDEV","_jsxDEV","workouts","ectomorph","name","description","mesomorph","endomorph","Workout","bodyType","children","variant","gutterBottom","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","exercise","index","item","xs","sm","_c","$RefreshReg$"],"sources":["/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx"],"sourcesContent":["import React from 'react';\nimport { Container, Typography, Grid, Card, CardContent } from '@mui/material';\n\n// Type des exercices\ntype Exercise = {\n  name: string;\n  description: string;\n};\n\n// Type des exercices par type de corps\ntype WorkoutPlan = {\n  ectomorph: Exercise[];\n  mesomorph: Exercise[];\n  endomorph: Exercise[];\n};\n\n// Exemple de données\nconst workouts: WorkoutPlan = {\n  ectomorph: [\n    { name: 'Push Ups', description: 'Do 3 sets of 15 push-ups.' },\n    { name: 'Pull Ups', description: 'Do 3 sets of 10 pull-ups.' },\n  ],\n  mesomorph: [\n    { name: 'Squats', description: 'Do 3 sets of 20 squats.' },\n    { name: 'Lunges', description: 'Do 3 sets of 12 lunges on each leg.' },\n  ],\n  endomorph: [\n    { name: 'Plank', description: 'Hold the plank for 1 minute.' },\n    { name: 'Jumping Jacks', description: 'Do 3 sets of 30 jumping jacks.' },\n  ],\n};\n\ninterface WorkoutProps {\n  bodyType: 'ectomorph' | 'mesomorph' | 'endomorph';\n}\n\nconst Workout: React.FC<WorkoutProps> = ({ bodyType }) => {\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Workout Plan for {bodyType.charAt(0).toUpperCase() + bodyType.slice(1)}\n      </Typography>\n\n      <Grid container spacing={3}>\n        {workouts[bodyType].map((exercise: Exercise, index: number) => (\n          <Grid item xs={12} sm={6} key={index}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">{exercise.name}</Typography>\n                <Typography>{exercise.description}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Workout;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,IAAI,EAAEC,WAAW,QAAQ,eAAe;;AAE9E;;AAMA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA;AACA,MAAMC,QAAqB,GAAG;EAC5BC,SAAS,EAAE,CACT;IAAEC,IAAI,EAAE,UAAU;IAAEC,WAAW,EAAE;EAA4B,CAAC,EAC9D;IAAED,IAAI,EAAE,UAAU;IAAEC,WAAW,EAAE;EAA4B,CAAC,CAC/D;EACDC,SAAS,EAAE,CACT;IAAEF,IAAI,EAAE,QAAQ;IAAEC,WAAW,EAAE;EAA0B,CAAC,EAC1D;IAAED,IAAI,EAAE,QAAQ;IAAEC,WAAW,EAAE;EAAsC,CAAC,CACvE;EACDE,SAAS,EAAE,CACT;IAAEH,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAA+B,CAAC,EAC9D;IAAED,IAAI,EAAE,eAAe;IAAEC,WAAW,EAAE;EAAiC,CAAC;AAE5E,CAAC;AAMD,MAAMG,OAA+B,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxD,oBACER,OAAA,CAACN,SAAS;IAAAe,QAAA,gBACRT,OAAA,CAACL,UAAU;MAACe,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,GAAC,mBACnB,EAACD,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eAEblB,OAAA,CAACJ,IAAI;MAACuB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAX,QAAA,EACxBR,QAAQ,CAACO,QAAQ,CAAC,CAACa,GAAG,CAAC,CAACC,QAAkB,EAAEC,KAAa,kBACxDvB,OAAA,CAACJ,IAAI;QAAC4B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAjB,QAAA,eACvBT,OAAA,CAACH,IAAI;UAAAY,QAAA,eACHT,OAAA,CAACF,WAAW;YAAAW,QAAA,gBACVT,OAAA,CAACL,UAAU;cAACe,OAAO,EAAC,IAAI;cAAAD,QAAA,EAAEa,QAAQ,CAACnB;YAAI;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACrDlB,OAAA,CAACL,UAAU;cAAAc,QAAA,EAAEa,QAAQ,CAAClB;YAAW;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GANsBK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAO9B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACS,EAAA,GArBIpB,OAA+B;AAuBrC,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}