{"ast":null,"code":"import React,{useState}from'react';import{AppBar,Toolbar,Button,Container,Typography,Card,CardContent,Select,MenuItem,FormControl,InputLabel}from'@mui/material';import{useNavigate}from'react-router-dom';// Recipe type\n// Recipes by body type\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Sample recipe data\nconst recipes={ectomorph:[{name:'Protein Smoothie',description:'A protein-rich smoothie for muscle mass gain.',ingredients:['200g Greek yogurt','1 banana','30g protein powder','200ml almond milk']},{name:'Chicken Pasta',description:'A balanced meal to help with weight gain.',ingredients:['100g whole wheat pasta','150g grilled chicken','Broccoli','Olive oil']},{name:'Avocado Toast',description:'A healthy and quick snack.',ingredients:['2 slices whole wheat bread','1 avocado','Salt','Pepper']}],mesomorph:[{name:'Quinoa Salad',description:'A balanced meal rich in protein and carbs to maintain a healthy weight.',ingredients:['100g quinoa','100g chicken','Avocado','Cherry tomatoes','Feta cheese']},{name:'Vegetable and Tofu Bowl',description:'A vegetarian meal rich in protein.',ingredients:['Tofu','Spinach','Sweet potato','Olive oil','Spices']},{name:'Grilled Salmon',description:'A nutrient-rich meal for overall health.',ingredients:['150g salmon','Lemon juice','Asparagus','Olive oil']}],endomorph:[{name:'Vegetable Soup',description:'A low-calorie, high-fiber meal for weight loss support.',ingredients:['Zucchini','Carrots','Celery','Onions','Spices']},{name:'Spinach and Salmon Salad',description:'A light salad rich in omega-3.',ingredients:['Spinach','150g salmon','Avocado','Chia seeds','Light dressing']},{name:'Berry Parfait',description:'A light dessert or snack.',ingredients:['Greek yogurt','Mixed berries','Granola','Honey']}]};const RecipeIdeas=()=>{const[bodyType,setBodyType]=useState('ectomorph');const[selectedRecipe,setSelectedRecipe]=useState(recipes[bodyType][0]);const navigate=useNavigate();const handleHomeClick=()=>{navigate('/');};const generateRandomRecipe=()=>{const bodyTypeRecipes=recipes[bodyType];const randomRecipe=bodyTypeRecipes[Math.floor(Math.random()*bodyTypeRecipes.length)];setSelectedRecipe(randomRecipe);};return/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:'100vh',backgroundColor:'#000',color:'#fff',display:'flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center',padding:'0'},children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",sx:{backgroundColor:'#FF9800',width:'100%'},children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleHomeClick,sx:{backgroundColor:'#FF9800',color:'#fff','&:hover':{backgroundColor:'#e68900'}},children:\"Home\"})})}),/*#__PURE__*/_jsx(Toolbar,{}),/*#__PURE__*/_jsxs(Container,{sx:{width:{xs:'90%',sm:'80%',md:'60%'},padding:{xs:'50px 20px',sm:'100px'},display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'#fff',backgroundColor:'rgba(255, 255, 255, 0.1)',borderRadius:'10px',marginTop:'20px'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,sx:{fontSize:{xs:'1.5rem',md:'2rem'}},children:[\"Recipe Ideas for \",bodyType.charAt(0).toUpperCase()+bodyType.slice(1)]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(InputLabel,{sx:{color:'#fff'},children:\"Body Type\"}),/*#__PURE__*/_jsxs(Select,{value:bodyType,onChange:e=>{setBodyType(e.target.value);setSelectedRecipe(recipes[e.target.value][0]);},label:\"Body Type\",sx:{backgroundColor:'rgba(192, 192, 192, 0.8)',borderRadius:'5px'},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"ectomorph\",children:\"Ectomorph\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"mesomorph\",children:\"Mesomorph\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"endomorph\",children:\"Endomorph\"})]})]}),/*#__PURE__*/_jsx(Card,{sx:{backgroundColor:'#333',marginBottom:'20px',width:'100%'},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{color:'#fff',fontSize:{xs:'1.2rem',sm:'1.5rem'}},children:selectedRecipe===null||selectedRecipe===void 0?void 0:selectedRecipe.name}),/*#__PURE__*/_jsx(Typography,{sx:{color:'#ccc',fontSize:{xs:'0.9rem',sm:'1rem'}},children:selectedRecipe===null||selectedRecipe===void 0?void 0:selectedRecipe.description}),/*#__PURE__*/_jsx(Typography,{sx:{color:'#fff',marginTop:'10px'},children:\"Ingredients:\"}),/*#__PURE__*/_jsx(\"ul\",{children:selectedRecipe===null||selectedRecipe===void 0?void 0:selectedRecipe.ingredients.map((ingredient,i)=>/*#__PURE__*/_jsx(\"li\",{style:{color:'#ccc',fontSize:'0.9rem'},children:ingredient},i))})]})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:generateRandomRecipe,sx:{backgroundColor:'#FF9800',color:'#fff','&:hover':{backgroundColor:'#e68900'},fontSize:{xs:'0.9rem',md:'1rem'}},children:\"Generate New Recipe\"})]})]});};export default RecipeIdeas;","map":{"version":3,"names":["React","useState","AppBar","Toolbar","Button","Container","Typography","Card","CardContent","Select","MenuItem","FormControl","InputLabel","useNavigate","jsx","_jsx","jsxs","_jsxs","recipes","ectomorph","name","description","ingredients","mesomorph","endomorph","RecipeIdeas","bodyType","setBodyType","selectedRecipe","setSelectedRecipe","navigate","handleHomeClick","generateRandomRecipe","bodyTypeRecipes","randomRecipe","Math","floor","random","length","style","minHeight","backgroundColor","color","display","flexDirection","justifyContent","alignItems","padding","children","position","sx","width","variant","onClick","xs","sm","md","borderRadius","marginTop","gutterBottom","fontSize","charAt","toUpperCase","slice","fullWidth","marginBottom","value","onChange","e","target","label","map","ingredient","i"],"sources":["/Users/mathildeanaton/fitness-tracker/src/components/pages/RecipeIdeas.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, Button, Container, Typography, Grid, Card, CardContent, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\n// Recipe type\ntype Recipe = {\n  name: string;\n  description: string;\n  ingredients: string[];\n};\n\n// Recipes by body type\ntype RecipePlan = {\n  ectomorph: Recipe[];\n  mesomorph: Recipe[];\n  endomorph: Recipe[];\n};\n\n// Sample recipe data\nconst recipes: RecipePlan = {\n  ectomorph: [\n    { name: 'Protein Smoothie', description: 'A protein-rich smoothie for muscle mass gain.', ingredients: ['200g Greek yogurt', '1 banana', '30g protein powder', '200ml almond milk'] },\n    { name: 'Chicken Pasta', description: 'A balanced meal to help with weight gain.', ingredients: ['100g whole wheat pasta', '150g grilled chicken', 'Broccoli', 'Olive oil'] },\n    { name: 'Avocado Toast', description: 'A healthy and quick snack.', ingredients: ['2 slices whole wheat bread', '1 avocado', 'Salt', 'Pepper'] },\n  ],\n  mesomorph: [\n    { name: 'Quinoa Salad', description: 'A balanced meal rich in protein and carbs to maintain a healthy weight.', ingredients: ['100g quinoa', '100g chicken', 'Avocado', 'Cherry tomatoes', 'Feta cheese'] },\n    { name: 'Vegetable and Tofu Bowl', description: 'A vegetarian meal rich in protein.', ingredients: ['Tofu', 'Spinach', 'Sweet potato', 'Olive oil', 'Spices'] },\n    { name: 'Grilled Salmon', description: 'A nutrient-rich meal for overall health.', ingredients: ['150g salmon', 'Lemon juice', 'Asparagus', 'Olive oil'] },\n  ],\n  endomorph: [\n    { name: 'Vegetable Soup', description: 'A low-calorie, high-fiber meal for weight loss support.', ingredients: ['Zucchini', 'Carrots', 'Celery', 'Onions', 'Spices'] },\n    { name: 'Spinach and Salmon Salad', description: 'A light salad rich in omega-3.', ingredients: ['Spinach', '150g salmon', 'Avocado', 'Chia seeds', 'Light dressing'] },\n    { name: 'Berry Parfait', description: 'A light dessert or snack.', ingredients: ['Greek yogurt', 'Mixed berries', 'Granola', 'Honey'] },\n  ],\n};\n\nconst RecipeIdeas: React.FC = () => {\n  const [bodyType, setBodyType] = useState<'ectomorph' | 'mesomorph' | 'endomorph'>('ectomorph');\n  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(recipes[bodyType][0]);\n  const navigate = useNavigate();\n\n  const handleHomeClick = () => {\n    navigate('/');\n  };\n\n  const generateRandomRecipe = () => {\n    const bodyTypeRecipes = recipes[bodyType];\n    const randomRecipe = bodyTypeRecipes[Math.floor(Math.random() * bodyTypeRecipes.length)];\n    setSelectedRecipe(randomRecipe);\n  };\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      backgroundColor: '#000', \n      color: '#fff', \n      display: 'flex', \n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center', \n      padding: '0',\n    }}>\n      <AppBar position=\"fixed\" sx={{ backgroundColor: '#FF9800', width: '100%' }}>\n        <Toolbar>\n          <Button \n            variant=\"contained\" \n            onClick={handleHomeClick} \n            sx={{ \n              backgroundColor: '#FF9800', \n              color: '#fff', \n              '&:hover': { backgroundColor: '#e68900' } \n            }}\n          >\n            Home\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Toolbar />\n\n      <Container \n        sx={{\n          width: { xs: '90%', sm: '80%', md: '60%' },\n          padding: { xs: '50px 20px', sm: '100px' },\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: '#fff',\n          backgroundColor: 'rgba(255, 255, 255, 0.1)',\n          borderRadius: '10px',\n          marginTop: '20px',\n        }}\n      >\n        <Typography \n          variant=\"h4\" \n          gutterBottom \n          sx={{\n            fontSize: { xs: '1.5rem', md: '2rem' },\n          }}\n        >\n          Recipe Ideas for {bodyType.charAt(0).toUpperCase() + bodyType.slice(1)}\n        </Typography>\n\n        <FormControl fullWidth sx={{ marginBottom: '20px' }}>\n          <InputLabel sx={{ color: '#fff' }}>Body Type</InputLabel>\n          <Select\n            value={bodyType}\n            onChange={(e) => {\n              setBodyType(e.target.value as 'ectomorph' | 'mesomorph' | 'endomorph');\n              setSelectedRecipe(recipes[e.target.value as 'ectomorph' | 'mesomorph' | 'endomorph'][0]);\n            }}\n            label=\"Body Type\"\n            sx={{ backgroundColor: 'rgba(192, 192, 192, 0.8)', borderRadius: '5px' }}\n          >\n            <MenuItem value=\"ectomorph\">Ectomorph</MenuItem>\n            <MenuItem value=\"mesomorph\">Mesomorph</MenuItem>\n            <MenuItem value=\"endomorph\">Endomorph</MenuItem>\n          </Select>\n        </FormControl>\n\n        <Card sx={{ backgroundColor: '#333', marginBottom: '20px', width: '100%' }}>\n          <CardContent>\n            <Typography \n              variant=\"h6\" \n              sx={{ \n                color: '#fff', \n                fontSize: { xs: '1.2rem', sm: '1.5rem' } \n              }}\n            >\n              {selectedRecipe?.name}\n            </Typography>\n            <Typography sx={{ color: '#ccc', fontSize: { xs: '0.9rem', sm: '1rem' } }}>\n              {selectedRecipe?.description}\n            </Typography>\n            <Typography sx={{ color: '#fff', marginTop: '10px' }}>Ingredients:</Typography>\n            <ul>\n              {selectedRecipe?.ingredients.map((ingredient, i) => (\n                <li \n                  key={i} \n                  style={{ color: '#ccc', fontSize: '0.9rem' }}\n                >\n                  {ingredient}\n                </li>\n              ))}\n            </ul>\n          </CardContent>\n        </Card>\n\n        <Button \n          variant=\"contained\" \n          onClick={generateRandomRecipe}\n          sx={{\n            backgroundColor: '#FF9800',\n            color: '#fff',\n            '&:hover': { backgroundColor: '#e68900' },\n            fontSize: { xs: '0.9rem', md: '1rem' },\n          }}\n        >\n          Generate New Recipe\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default RecipeIdeas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}