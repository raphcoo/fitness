{"ast":null,"code":"var _jsxFileName = \"/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, CardActions, Button } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = {\n  ectomorph: [{\n    name: 'Push-ups',\n    description: 'Great for upper body strength'\n  }, {\n    name: 'Pull-ups',\n    description: 'Works your back and arms'\n  }, {\n    name: 'Squats',\n    description: 'Essential for leg strength'\n  }],\n  mesomorph: [{\n    name: 'Bench Press',\n    description: 'Builds chest muscles'\n  }, {\n    name: 'Deadlifts',\n    description: 'Strengthens the entire body'\n  }, {\n    name: 'Lunges',\n    description: 'Great for legs and balance'\n  }],\n  endomorph: [{\n    name: 'Cardio Running',\n    description: 'Helps burn fat effectively'\n  }, {\n    name: 'Jump Rope',\n    description: 'Improves cardiovascular health'\n  }, {\n    name: 'Mountain Climbers',\n    description: 'Works abs and cardio'\n  }]\n};\nconst Workout = () => {\n  _s();\n  const location = useLocation();\n  const [bodyType, setBodyType] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Récupérer le type de corps depuis la page précédente\n    const params = new URLSearchParams(location.search);\n    const bodyTypeParam = params.get('bodyType');\n    setBodyType(bodyTypeParam);\n  }, [location]);\n  const handleBack = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      paddingTop: '50px',\n      color: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: [\"Workout Plan for \", bodyType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: bodyType && exercises[bodyType].map((exercise, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            backgroundColor: 'rgba(192, 192, 192, 0.8)',\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: exercise.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              sx: {\n                color: '#FF9800'\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        marginTop: '30px',\n        backgroundColor: '#FF9800',\n        color: '#fff'\n      },\n      onClick: handleBack,\n      children: \"Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Workout, \"4XCU3nqwOwb/cZiab166ukJze8Q=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Workout;\nexport default Workout;\nvar _c;\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Grid","Card","CardContent","CardActions","Button","useNavigate","useLocation","jsxDEV","_jsxDEV","exercises","ectomorph","name","description","mesomorph","endomorph","Workout","_s","location","bodyType","setBodyType","navigate","params","URLSearchParams","search","bodyTypeParam","get","handleBack","sx","paddingTop","color","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","exercise","index","item","xs","sm","md","backgroundColor","borderRadius","size","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/mathildeanaton/fitness-tracker/src/components/pages/Workout.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, CardActions, Button } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst exercises = {\n  ectomorph: [\n    { name: 'Push-ups', description: 'Great for upper body strength' },\n    { name: 'Pull-ups', description: 'Works your back and arms' },\n    { name: 'Squats', description: 'Essential for leg strength' },\n  ],\n  mesomorph: [\n    { name: 'Bench Press', description: 'Builds chest muscles' },\n    { name: 'Deadlifts', description: 'Strengthens the entire body' },\n    { name: 'Lunges', description: 'Great for legs and balance' },\n  ],\n  endomorph: [\n    { name: 'Cardio Running', description: 'Helps burn fat effectively' },\n    { name: 'Jump Rope', description: 'Improves cardiovascular health' },\n    { name: 'Mountain Climbers', description: 'Works abs and cardio' },\n  ],\n};\n\nconst Workout: React.FC = () => {\n  const location = useLocation();\n  const [bodyType, setBodyType] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Récupérer le type de corps depuis la page précédente\n    const params = new URLSearchParams(location.search);\n    const bodyTypeParam = params.get('bodyType');\n    setBodyType(bodyTypeParam);\n  }, [location]);\n\n  const handleBack = () => {\n    navigate('/');\n  };\n\n  return (\n    <Container sx={{ paddingTop: '50px', color: '#fff' }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Workout Plan for {bodyType}\n      </Typography>\n      <Grid container spacing={3}>\n        {bodyType &&\n          exercises[bodyType].map((exercise, index) => (\n            <Grid item xs={12} sm={6} md={4} key={index}>\n              <Card sx={{ backgroundColor: 'rgba(192, 192, 192, 0.8)', borderRadius: '10px' }}>\n                <CardContent>\n                  <Typography variant=\"h5\">{exercise.name}</Typography>\n                  <Typography variant=\"body2\">{exercise.description}</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" sx={{ color: '#FF9800' }}>\n                    Start\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n      <Button\n        variant=\"contained\"\n        sx={{ marginTop: '30px', backgroundColor: '#FF9800', color: '#fff' }}\n        onClick={handleBack}\n      >\n        Back to Home\n      </Button>\n    </Container>\n  );\n};\n\nexport default Workout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}